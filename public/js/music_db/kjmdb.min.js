const HOME="/public/js/music_db/",ALBUMS_HOME=HOME+"albums/";function getRecordsList(e,o,n){setTemplate(e,!0).then((e=>{setRecordsList(o,e,n)})).catch((e=>{console.log("promise rejected",e)}))}function getRecordInfo(e,o){setTemplate(e,!1).then((e=>{setRecordsInfo(o,e)})).catch((e=>{console.log("promise rejected",e)}))}function setTemplate(e,o){return new Promise(((n,t)=>{var r=new XMLHttpRequest;r.open("GET",e),r.onload=function(){if(r.status>=200&&r.status<400){let e=r.responseText;"undefined"==typeof mixer&&1!=o||mixer.destroy(),n(e)}else t("We connected to the server, but it an error was returned.")},r.onerror=function(){console.log("Connection Error Charlie!")},r.send()}))}function setRecordsList(e,o,n){var t=new XMLHttpRequest;t.open("GET",e),t.onload=function(){if(t.status>=200&&t.status<400){var e=JSON.parse(t.responseText),r=Handlebars.compile(o)(e);document.getElementById(n).innerHTML=r;mixitup("#"+n)}else console.log("We connected to the server, but it an error was returned.")},t.onerror=function(){console.log("Connection Error Charlie!")},t.send()}function setRecordsInfo(e,o){var n=new XMLHttpRequest;n.open("GET",ALBUMS_HOME+e+"/info.json"),n.onload=function(){if(n.status>=200&&n.status<400){var t=JSON.parse(n.responseText),r=Handlebars.compile(o)(t);modal2.setContent('<div id="rc_contain" class="record_wrapper"><div class="ri_cover"><img src="'+ALBUMS_HOME+e+'/front.jpg" loading="lazy"/></div>'+r+"</div>"),modal2.open()}else console.log("We connected to the server, but it an error was returned.")},n.onerror=function(){console.log("Connection Error Charlie!")},n.send()}